openapi: 3.0.3
info:
  title: Trackify API
  description: |-
    API for job tracking service with Notion integration
  contact:
    email: "yisu.kim.dev@outlook.com"
  version: 0.1.0
servers:
  - url: http://localhost:8080
tags:
  - name: auth
    description: Authentication endpoints for OAuth 2.0
paths:
  /auth/{provider}:
    get:
      tags:
        - auth
      summary: Get OAuth authorization URL
      description: Generates and returns the OAuth authorization URL for the specified provider. The client uses this URL to redirect the user for OAuth authentication.
      operationId: getAuthUrl
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/AuthProvider"
      responses:
        "200":
          description: OAuth authorization URL generated.
          content:
            application/json:
              schema:
                type: object
                properties:
                  authorizationUrl:
                    type: string
                    description: The URL to redirect the user for OAuth authorization.
                    example: https://api.notion.com/v1/oauth/authorize?owner=user&client_id=463558a3-725e-4f37-b6d3-0889894f68de&redirect_uri=https%3A%2F%2Fexample.com%2Fauth%2Fnotion%2Fcallback&response_type=code&state=xyzABC123
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OAuth provider not supported or missing

  /auth/{provider}/callback:
    get:
      tags:
        - auth
      summary: Handle OAuth callback
      description: After user authentication, the OAuth provider redirects back to the server with a code. This endpoint handles the callback, exchanges the code for access tokens, and completes the authentication process.
      operationId: exchangeCodeForToken
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/AuthProvider"
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: The authorization code provided by the OAuth provider after successful login.
        - name: state
          in: query
          required: true
          schema:
            type: string
          description: The state parameter for CSRF protection, sent in the initial authorization request.
      responses:
        "200":
          description: Authentication successful, access token obtained.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The access token issued by the OAuth provider.
                    example: "eyJhbGciOiJIUzI1NiI....<jwt_token>"
                required:
                  - token
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OAuth provider not supported or missing authorization code and/or state parameter
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Authentication error
                    example: Authorization code or state is invalid or expired

  /auth/{provider}/me:
    get:
      tags:
        - auth
      summary: Check authentication status
      description: Verifies the user's authentication status by checking the provided access token and returns the user's information if authenticated.
      operationId: checkAuthStatus
      security:
        - bearerAuth: []
      parameters:
        - name: provider
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/AuthProvider"
      responses:
        "200":
          description: User is authenticated and user data is returned.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: OAuth provider not supported or missing access token
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Authentication error
                    example: Access token is invalid or expired

components:
  schemas:
    AuthProvider:
      type: string
      enum: [notion]
      description: The OAuth provider to be used for authentication. (e.g., Notion, Google)
    User:
      type: object
      properties:
        userId:
          type: string
          maxLength: 128
        userName:
          type: string
          maxLength: 128
        createdAt:
          type: string
          format: date-time
          example: "2024-09-30T09:30:20.000Z"
      required:
        - userId
        - createdAt
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
